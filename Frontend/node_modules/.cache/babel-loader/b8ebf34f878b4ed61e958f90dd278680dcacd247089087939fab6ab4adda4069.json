{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/AST/Frontend/src/components/CombineRules.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CombineRules() {\n  _s();\n  const [ruleStrings, setRuleStrings] = useState(\"\");\n  const [result, setResult] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:5000/api/combine-rules\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ruleStrings: ruleStrings.split(\"\\n\").map(s => s.trim()).filter(s => s)\n        })\n      });\n      const data = await response.json();\n      setResult(data);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Combine Rules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: ruleStrings,\n        onChange: e => setRuleStrings(e.target.value),\n        placeholder: \"Enter rule strings (one per line)\",\n        rows: 5,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Combine Rules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(result, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(CombineRules, \"Qut/+Y7oDEdXLYdP9BDBwVBqdRI=\");\n_c = CombineRules;\nexport default CombineRules;\nvar _c;\n$RefreshReg$(_c, \"CombineRules\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CombineRules","_s","ruleStrings","setRuleStrings","result","setResult","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","split","map","s","trim","filter","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","rows","required","type","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/AST/Frontend/src/components/CombineRules.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction CombineRules() {\n  const [ruleStrings, setRuleStrings] = useState(\"\");\n  const [result, setResult] = useState(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:5000/api/combine-rules\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          ruleStrings: ruleStrings\n            .split(\"\\n\")\n            .map((s) => s.trim())\n            .filter((s) => s),\n        }),\n      });\n      const data = await response.json();\n      setResult(data);\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Combine Rules</h2>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          value={ruleStrings}\n          onChange={(e) => setRuleStrings(e.target.value)}\n          placeholder=\"Enter rule strings (one per line)\"\n          rows={5}\n          required\n        />\n        <button type=\"submit\">Combine Rules</button>\n      </form>\n      {result && <pre>{JSON.stringify(result, null, 2)}</pre>}\n    </div>\n  );\n}\n\nexport default CombineRules;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACtEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBb,WAAW,EAAEA,WAAW,CACrBc,KAAK,CAAC,IAAI,CAAC,CACXC,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CACpBC,MAAM,CAAEF,CAAC,IAAKA,CAAC;QACpB,CAAC;MACH,CAAC,CAAC;MACF,MAAMG,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;MAClCjB,SAAS,CAACgB,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACExB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB9B,OAAA;MAAM+B,QAAQ,EAAExB,YAAa;MAAAmB,QAAA,gBAC3B1B,OAAA;QACEgC,KAAK,EAAE7B,WAAY;QACnB8B,QAAQ,EAAGzB,CAAC,IAAKJ,cAAc,CAACI,CAAC,CAAC0B,MAAM,CAACF,KAAK,CAAE;QAChDG,WAAW,EAAC,mCAAmC;QAC/CC,IAAI,EAAE,CAAE;QACRC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF9B,OAAA;QAAQsC,IAAI,EAAC,QAAQ;QAAAZ,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,EACNzB,MAAM,iBAAIL,OAAA;MAAA0B,QAAA,EAAMX,IAAI,CAACC,SAAS,CAACX,MAAM,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV;AAAC5B,EAAA,CAxCQD,YAAY;AAAAsC,EAAA,GAAZtC,YAAY;AA0CrB,eAAeA,YAAY;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}